"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tableArgsBuilder = exports.categoryMatcher = exports.getIframeRoot = void 0;

var _constants = require("./constants");

var _useLocalStorage = require("./use-local-storage");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var getIframeRoot = function getIframeRoot() {
  var iframe = document.querySelector('iframe#storybook-preview-iframe');
  var root = iframe.contentWindow.document.querySelector('#root');
  return root;
};

exports.getIframeRoot = getIframeRoot;

var categoryMatcher = function categoryMatcher(matchCatgories, propKey) {
  var keys = Object.keys(matchCatgories);

  if (!keys.length) {
    return '';
  }

  var category = '';
  keys.forEach(function (key) {
    var regex = new RegExp(matchCatgories[key]);

    if (regex.test(propKey)) {
      category = key;
    }
  });
  return category;
};

exports.categoryMatcher = categoryMatcher;

function sortByKey(record, key) {
  return record.sort(function (a, b) {
    return a[key].localeCompare(b[key]);
  });
}

var tableArgsBuilder = function tableArgsBuilder(properties, propsConfig, hiddenProps, matchCategory) {
  return _toConsumableArray(sortByKey(properties, 'key')).reduce(function (acc, prop) {
    var _config$control, _config$options, _config$description, _config$category;

    var config = propsConfig[prop.key];
    if (hiddenProps.includes(prop.key)) return acc;
    var storage = (0, _useLocalStorage.useLocalStorage)();
    var initialValues = storage.getLocalStorage(_constants.ADDON_ID).initialValues;
    acc[prop.name] = {
      category: '',
      control: _objectSpread({
        type: prop.type,
        value: prop.value
      }, (_config$control = config === null || config === void 0 ? void 0 : config.control) !== null && _config$control !== void 0 ? _config$control : {}),
      options: (_config$options = config === null || config === void 0 ? void 0 : config.options) !== null && _config$options !== void 0 ? _config$options : undefined,
      description: (_config$description = config === null || config === void 0 ? void 0 : config.description) !== null && _config$description !== void 0 ? _config$description : undefined,
      key: prop.key,
      name: prop.key,
      table: {
        category: (_config$category = config === null || config === void 0 ? void 0 : config.category) !== null && _config$category !== void 0 ? _config$category : categoryMatcher(matchCategory, prop.key),
        defaultValue: {
          summary: initialValues.find(function (o) {
            return o.key === prop.key;
          }).value
        }
      }
    };
    return acc;
  }, {});
};

exports.tableArgsBuilder = tableArgsBuilder;